{"version":3,"sources":["logo.svg","actions/types.js","http-common.js","services/todos.service.js","components/add-todo.component.js","actions/todos.js","components/details-todo.component.js","components/list-todos.component.js","App.js","reportWebVitals.js","reducers/todos.js","reducers/index.js","store.js","index.js"],"names":["CREATE_TODO","RETRIEVE_TODOS","UPDATE_TODO","DELETE_TODO","axios","create","baseURL","headers","http","get","id","data","post","put","delete","AddToDo","props","onChangeTask","bind","onChangeDue","onChangeStatus","saveTodo","newTodo","state","task","due","status","submitted","e","this","setState","target","value","createTodo","then","console","log","catch","className","onClick","htmlFor","type","required","onChange","name","Component","connect","dispatch","a","ToDoDataService","res","payload","Promise","resolve","reject","ToDoDetails","getTodo","updateContent","removeTodo","currentTodo","message","match","params","prevState","TodoDataService","response","updateTodo","reponse","deleteTodo","history","push","update","ListTodos","refreshData","setActiveTodo","currentIndex","retrieveTodos","todo","index","todos","map","to","getAll","App","class","exact","path","component","ListToDos","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","todoReducer","action","filter","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2906fd2b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const CREATE_TODO = \"CREATE_TODO\";\r\nexport const RETRIEVE_TODOS = \"RETRIEVE_TODOS\";\r\nexport const UPDATE_TODO = \"UPDATE_TODO\";\r\nexport const DELETE_TODO = \"DELETE_TODO\";","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://edwin-todos.ipd24.ca/api\", /* \"http://todo.api/api\"; //local */\r\n  headers: {\r\n    \"Content-type\": \"application/json\"\r\n  }\r\n});","import http from \"../http-common\";\r\n\r\nclass ToDoDataService {\r\n    getAll() {\r\n      return http.get(\"/todos\");\r\n    }\r\n  \r\n    get(id) {\r\n      return http.get(`/todo/${id}`);\r\n    }\r\n  \r\n    create(data) {\r\n      return http.post(\"/add\", data);\r\n    }\r\n  \r\n    update(id, data) {\r\n      return http.put(`/todo/${id}`, data);\r\n    }\r\n  \r\n    delete(id) {\r\n      return http.delete(`/todo/${id}`);\r\n    }\r\n}\r\n  \r\nexport default new ToDoDataService();","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { createTodo } from \"../actions/todos\";\r\n\r\nclass AddToDo extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.onChangeTask = this.onChangeTask.bind(this);\r\n      this.onChangeDue = this.onChangeDue.bind(this);\r\n      this.onChangeStatus = this.onChangeStatus.bind(this);\r\n      this.saveTodo = this.saveTodo.bind(this);\r\n      this.newTodo = this.newTodo.bind(this);\r\n  \r\n      this.state = {\r\n        id: null,\r\n        task: \"\",\r\n        due: null,\r\n        status: \"pending\",\r\n        submitted: false,\r\n      };\r\n    }\r\n  \r\n    onChangeTask(e) {\r\n      this.setState({\r\n        task: e.target.value,\r\n      });\r\n    }\r\n  \r\n    onChangeDue(e) {\r\n        this.setState({\r\n          due: e.target.value,\r\n        });\r\n    }\r\n\r\n    onChangeStatus(e) {\r\n      this.setState({\r\n        status: e.target.value,\r\n      });\r\n    }\r\n  \r\n    saveTodo() {\r\n      const { task, due, status } = this.state;\r\n  \r\n      this.props\r\n        .createTodo(task, due, status)\r\n        .then((data) => {\r\n          this.setState({\r\n            id: data.id,\r\n            task: data.task,\r\n            due: data.due,\r\n            status: data.status,\r\n            submitted: true,\r\n          });\r\n          console.log(data);\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    }\r\n  \r\n    newTodo() {\r\n      this.setState({\r\n        id: null,\r\n        task: \"\",\r\n        due: null,\r\n        status: \"pending\",\r\n        submitted: false,\r\n      });\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <div className=\"submit-form\">\r\n              {this.state.submitted ? (\r\n                <div>\r\n                  <h4>You submitted successfully!</h4>\r\n                  <button className=\"btn btn-success\" onClick={this.newTodo}>\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"task\">Task</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"task\"\r\n                      required\r\n                      value={this.state.task}\r\n                      onChange={this.onChangeTask}\r\n                      name=\"task\"\r\n                    />\r\n                  </div>\r\n      \r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"due\">Due</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      className=\"form-control\"\r\n                      id=\"due\"\r\n                      required\r\n                      value={this.state.due}\r\n                      onChange={this.onChangeDue}\r\n                      name=\"due\"\r\n                    />\r\n                  </div>\r\n      \r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"status\">Status</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"status\"\r\n                      required\r\n                      value={this.state.status}\r\n                      onChange={this.onChangeStatus}\r\n                      name=\"status\"\r\n                    />\r\n                  </div>\r\n\r\n                  <button onClick={this.saveTodo} className=\"btn btn-success\">\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          );\r\n    }\r\n  }\r\n  \r\n  export default connect(null, { createTodo })(AddToDo);","import {\r\n    CREATE_TODO,\r\n    RETRIEVE_TODOS,\r\n    UPDATE_TODO,\r\n    DELETE_TODO,\r\n} from \"./types\";\r\nimport ToDoDataService from \"../services/todos.service\";\r\n  \r\nexport const retrieveTodos = () => async (dispatch) => {\r\n    try {\r\n      const res = await ToDoDataService.getAll();\r\n  \r\n      dispatch({\r\n        type: RETRIEVE_TODOS,\r\n        payload: res.data,\r\n      });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n};\r\n\r\nexport const createTodo = (task, due, status) => async (dispatch) => {\r\n    try {\r\n      const id = await ToDoDataService.create({ task, due, status });\r\n      const res = await ToDoDataService.get(id.data);\r\n  \r\n      dispatch({\r\n        type: CREATE_TODO,\r\n        payload: res.data,\r\n      });\r\n  \r\n      return Promise.resolve(res.data);\r\n    } catch (err) {\r\n      return Promise.reject(err);\r\n    }\r\n  };\r\n  \r\n  export const updateTodo = (id, data) => async (dispatch) => {\r\n    try {\r\n      const res = await ToDoDataService.update(id, data);\r\n  \r\n      dispatch({\r\n        type: UPDATE_TODO,\r\n        payload: res.data,\r\n      });\r\n  \r\n      return Promise.resolve(res.data); // todo updated\r\n    } catch (err) {\r\n      return Promise.reject(err);\r\n    }\r\n  };\r\n  \r\n  export const deleteTodo = (id) => async (dispatch) => {\r\n    try {\r\n      const res = await ToDoDataService.delete(id); \r\n  \r\n      dispatch({\r\n        type: DELETE_TODO,\r\n        payload: { id },\r\n      });\r\n      \r\n      console.log(res.data); // \"record is deleted\"\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  \r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateTodo, deleteTodo } from \"../actions/todos\";\r\nimport TodoDataService from \"../services/todos.service\";\r\n\r\nclass ToDoDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.onChangeTask = this.onChangeTask.bind(this);\r\n    this.onChangeDue = this.onChangeDue.bind(this);\r\n    this.onChangeStatus = this.onChangeStatus.bind(this);\r\n\r\n    this.getTodo = this.getTodo.bind(this);\r\n    this.updateContent = this.updateContent.bind(this);\r\n    this.removeTodo = this.removeTodo.bind(this);\r\n\r\n    this.state = {\r\n      currentTodo: null,\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTodo(this.props.match.params.id);\r\n  }\r\n\r\n  onChangeTask(e) {\r\n    const task = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentTodo: {\r\n          ...prevState.currentTodo,\r\n          task: task,\r\n        },\r\n      };\r\n    });\r\n    console.log(this.state);\r\n  }\r\n\r\n  onChangeDue(e) {\r\n    const due = e.target.value;\r\n\r\n    this.setState(function (prevState) {\r\n      return {\r\n        currentTodo: {\r\n          ...prevState.currentTodo,\r\n          due: due,\r\n        },\r\n      };\r\n    });\r\n  }\r\n\r\n  onChangeStatus(e) {\r\n    const status = e.target.value;\r\n\r\n      this.setState(function (prevState) {\r\n        return {\r\n          currentTodo: {\r\n            ...prevState.currentTodo,\r\n            status: status,\r\n          },\r\n        };\r\n      });\r\n  }\r\n\r\n  getTodo(id) {\r\n    TodoDataService.get(id)\r\n      .then((response) => {\r\n        this.setState({\r\n          currentTodo: response.data,\r\n        });\r\n        console.log(this.state.currentTodo);\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  updateContent() {\r\n    console.log(this.state.currentTodo);\r\n    this.props\r\n      .updateTodo(this.state.currentTodo.id, this.state.currentTodo)\r\n      .then((reponse) => {\r\n        console.log(reponse);\r\n        \r\n        this.setState({ message: \"The todo was updated successfully!\" });\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  removeTodo() {\r\n    this.props\r\n      .deleteTodo(this.state.currentTodo.id) //this.props.match.params.id\r\n      .then(() => {\r\n        this.props.history.push(\"/todos\");\r\n      })\r\n      .catch((e) => {\r\n        console.log(e);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Rendering...\");\r\n    return (\r\n        <div>\r\n          {this.state.currentTodo ? (\r\n            <div className=\"edit-form\">\r\n              <h4>Todo</h4>\r\n              <p>{this.state.currentTodo.id}</p>\r\n              <form>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"task\">Task</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"task\"\r\n                    value={this.state.currentTodo.task}\r\n                    onChange={this.onChangeTask}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"due\">Due</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control\"\r\n                    id=\"due\"\r\n                    value={this.state.currentTodo.due}\r\n                    onChange={this.onChangeDue}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"status\">Status</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    id=\"status\"\r\n                    value={this.state.currentTodo.status}\r\n                    onChange={this.onChangeStatus}\r\n                  />\r\n                </div> \r\n              </form>\r\n\r\n              <button\r\n                className=\"badge badge-danger mr-2\"\r\n                onClick={this.removeTodo}\r\n              >\r\n                Delete\r\n              </button>\r\n  \r\n              <button\r\n                type=\"submit\"\r\n                className=\"badge badge-success\"\r\n                onClick={this.updateContent}\r\n              >\r\n                Update\r\n              </button>\r\n              <p>{this.state.message}</p>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <br />\r\n              {\r\n                this.props.match.params.id?\r\n                  (<p>Loading data ...</p>)\r\n                  :(<p>Please click on a Todo ...</p>)\r\n              }\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default connect(null, { updateTodo, deleteTodo })(ToDoDetails);","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { retrieveTodos } from \"../actions/todos\";\r\n\r\nclass ListTodos extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.refreshData = this.refreshData.bind(this);\r\n    this.setActiveTodo = this.setActiveTodo.bind(this);\r\n\r\n    this.state = {\r\n      currentTodo: null,\r\n      currentIndex: -1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.retrieveTodos();\r\n  }\r\n\r\n  refreshData() {\r\n    this.setState({\r\n      currentTodo: null,\r\n      currentIndex: -1,\r\n    });\r\n  }\r\n\r\n  setActiveTodo(todo, index) {\r\n\r\n    this.setState({\r\n      currentTodo: todo,\r\n      currentIndex: index,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { currentTodo, currentIndex } = this.state;\r\n    const { todos } = this.props;\r\n\r\n    return (\r\n        <div className=\"list row\">\r\n          <div className=\"col-md-6\">\r\n            <h4>Todos List</h4>\r\n            <ul className=\"list-group\">\r\n              {todos &&\r\n                todos.map((todo, index) => (\r\n                  <li\r\n                    className={\r\n                      \"list-group-item \" +\r\n                      (index === currentIndex ? \"active\" : \"\")\r\n                    }\r\n                    onClick={() => this.setActiveTodo(todo, index)}\r\n                    key={index}\r\n                  >\r\n                    {todo.task}\r\n                  </li>\r\n                ))}\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-md-6\">\r\n            {currentTodo ? (\r\n              <div>\r\n                <h4>Todo</h4>\r\n                <div>\r\n                  <label>\r\n                    <strong>Task:</strong>\r\n                  </label>{\" \"}\r\n                  {currentTodo.task}\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    <strong>Due Date:</strong>\r\n                  </label>{\" \"}\r\n                  {currentTodo.due}\r\n                </div>\r\n                <div>\r\n                  <label>\r\n                    <strong>Status:</strong>\r\n                  </label>{\" \"}\r\n                  {currentTodo.status}\r\n                </div>\r\n  \r\n                <Link\r\n                  to={\"/todo/\" + currentTodo.id}\r\n                  className=\"badge badge-warning\"\r\n                >\r\n                  Edit\r\n                </Link>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <br />\r\n                <p>Please click on a Todo...</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    todos: state.todos,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { retrieveTodos })(ListTodos);","import logo from './logo.svg';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './App.css';\n\nimport AddToDo from \"./components/add-todo.component\";\nimport ToDoDetails from \"./components/details-todo.component\";\nimport ListToDos from \"./components/list-todos.component\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header>\n          <nav class=\"container-fluid navbar navbar-expand navbar-dark bg-dark\">\n            <Link to={\"/todos\"} className=\"navbar-brand\">\n              React ToDo\n            </Link>\n            <div class=\"navbar-nav mr-auto\">\n              <li class=\"nav-item\">\n                <Link to={\"/todos\"} className=\"nav-link\">\n                  List All\n                </Link>\n              </li>\n              <li class=\"nav-item\">\n                <Link to={\"/add\"} className=\"nav-link\">\n                  Add\n                </Link>\n              </li>\n            </div>\n          </nav>\n        </header>\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/todos\"]} component={ListToDos} />\n            <Route exact path=\"/add\" component={AddToDo} />\n            <Route path=\"/todo/:id\" component={ToDoDetails} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    CREATE_TODO,\r\n    RETRIEVE_TODOS,\r\n    UPDATE_TODO,\r\n    DELETE_TODO,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nfunction todoReducer(todos = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case CREATE_TODO:\r\n        return [...todos, payload];\r\n  \r\n      case RETRIEVE_TODOS:\r\n        return payload;\r\n  \r\n      case UPDATE_TODO:\r\n        return todos.map((todo) => {\r\n          if (todo.id === payload.id) {\r\n            return {\r\n              ...todo,\r\n              ...payload,\r\n            };\r\n          } else {\r\n            return todo;\r\n          }\r\n        });\r\n  \r\n      case DELETE_TODO:\r\n        return todos.filter(({ id }) => id !== payload.id);\r\n  \r\n      default:\r\n        return todos;\r\n    }\r\n  };\r\n  \r\n  export default todoReducer;","import { combineReducers } from \"redux\";\r\nimport todos from \"./todos\";\r\n\r\nexport default combineReducers({\r\n  todos,\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}